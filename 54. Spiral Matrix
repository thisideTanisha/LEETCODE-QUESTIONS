class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
               List<Integer> result = new ArrayList<>();

        int n = matrix.length;
        int m = matrix[0].length;
        int sr = 0, sc = 0, er = n - 1, ec = m - 1;

        while (sr <= er && sc <= ec) {
            // top row
            for (int j = sc; j <= ec; j++) {
                result.add(matrix[sr][j]);
            }

            // right column
            for (int i = sr + 1; i <= er; i++) {
                result.add(matrix[i][ec]);
            }

            // bottom row (only if sr < er)
            if (sr < er) {
                for (int j = ec - 1; j >= sc; j--) {
                    result.add(matrix[er][j]);
                }
            }

            // left column (only if sc < ec)
            if (sc < ec) {
                for (int i = er - 1; i > sr; i--) {
                    result.add(matrix[i][sc]);
                }
            }

            sc++;
            sr++;
            ec--;
            er--;
        }

        return result;
     
    }
}
